module Test_ConnectionPoint
   use funit
   use mapl3g_ConnectionPoint
   use mapl3g_RelativeConnectionPoint
   implicit none

contains

   @test
   ! This should already be covered by gFTL tests, but am troubleshooting
   ! problem with ordering of ConnectionPoint
   subroutine test_relative_less()

      associate (rcp_1 => RelativeConnectionPoint('A'), rcp_2 => RelativeConnectionPoint('B'))
        ! Identical
        @assert_that((rcp_1 < rcp_1), is(false()))
        @assert_that((rcp_2 < rcp_2), is(false()))
        ! Different
        @assert_that((rcp_1 < rcp_2), is(true()))
        @assert_that((rcp_2 < rcp_1), is(false()))
      end associate

   end subroutine test_relative_less
   
   @test
   subroutine test_connectionpoint_less()

      associate (cp_1 => ConnectionPoint('A','A','A'), cp_2 => ConnectionPoint('B','B','B'))
        ! Identical
        @assert_that((cp_1 < cp_1), is(false()))
        @assert_that((cp_2 < cp_2), is(false()))
        ! Different
        @assert_that((cp_1 < cp_2), is(true()))
        @assert_that((cp_2 < cp_1), is(false()))
      end associate
      
   end subroutine test_connectionpoint_less
   
   @test
   subroutine test_connectionpoint_less_full()

      integer :: i, j, k
      associate (cp => reshape([ &
           ConnectionPoint('A','A','A'), &
           ConnectionPoint('A','A','B'), &
           ConnectionPoint('A','B','A'), &
           ConnectionPoint('A','B','B'), &
           ConnectionPoint('B','A','A'), &
           ConnectionPoint('B','A','B'), &
           ConnectionPoint('B','B','A'), &
           ConnectionPoint('B','B','B')],[2,2,2]))

        ! Identical points are neither less nor greater
        do k = 1, 2
           do j = 1, 2
              do i = 1, 2
                 @assert_that((cp(i,j,k) < cp(i,j,k)), is(false()))
              end do
           end do
        end do

        ! Pairwise
        do j = 1, 2
           do i = 1, 2
              @assert_that(cp(i,j,1) < cp(i,j,2), is(true()))
              @assert_that(cp(i,j,2) < cp(i,j,1), is(false()))
           end do
        end do

        do k = 1, 2
           do i = 1, 2
              @assert_that(cp(i,1,k) < cp(i,2,k), is(true()))
              @assert_that(cp(i,2,k) < cp(i,1,k), is(false()))
           end do
        end do

        do k = 1, 2
           do j = 1, 2
              @assert_that(cp(1,j,k) < cp(2,j,k), is(true()))
              @assert_that(cp(2,j,k) < cp(1,j,k), is(false()))
           end do
        end do

      end associate
      
   end subroutine test_connectionpoint_less_full
   
   @test
   ! Reproducer from failing registry test
   subroutine test_connectionpoint_less_registry()

      associate ( &
           cp_1 => ConnectionPoint('grandchild_A','export','ae1'), &
           cp_2 => ConnectionPoint('child_A','export','ae2'), &
           cp_3 => ConnectionPoint('child_B', 'import', 'ai'))

        ! Identical
        @assert_that((cp_1 < cp_1), is(false()))
        @assert_that((cp_2 < cp_2), is(false()))
        @assert_that((cp_3 < cp_3), is(false()))

        ! Different
        @assert_that((cp_2 < cp_1), is(true()))
        @assert_that((cp_2 < cp_3), is(true()))
        @assert_that((cp_3 < cp_1), is(true()))

      end associate
      
   end subroutine test_connectionpoint_less_registry
   
end module Test_ConnectionPoint
