#include "MAPL_TestErr.h"
#include "unused_dummy.H"

module Test_FieldCreate

   use mapl3g_Field_API, only: MAPL_FieldCreate, MAPL_FieldEmptyComplete, MAPL_FieldGet
   use mapl3g_FieldInfo
   use mapl3g_VerticalStaggerLoc, only: VERTICAL_STAGGER_EDGE, VERTICAL_STAGGER_CENTER
   use mapl3g_FieldCondensedArray, only: assign_fptr_condensed_array
   use funit
   use ESMF_TestMethod_mod
   use esmf

   implicit none(type, external)

contains

   ! Just a basic test to ensure that things happen.  Far too many
   ! optional arguments to sensibly test all code paths, but certainly
   ! more tests could be added.
   @test(type=ESMF_TestMethod, npes=[1])
   subroutine test_get_units(this)
      class(ESMF_TestMethod), intent(inout) :: this

      type(ESMF_Field) :: field
      type(ESMF_Geom) :: geom
      type(ESMF_Grid) :: grid
      character(*), parameter :: EXPECTED_UNITS = 'km'
      character(:), allocatable :: units
      integer :: status

      grid = ESMF_GridCreateNoPeriDim(maxIndex=[4,4], _RC)
      geom = ESMF_GeomCreate(grid, _RC)
      
      field = MAPL_FieldCreate(geom, typekind=ESMF_TYPEKIND_R4, units=EXPECTED_UNITS, _RC)

      call MAPL_FieldGet(field, units=units, _RC)
      @assertEqual(units, EXPECTED_UNITS)

      call ESMF_FieldDestroy(field, _RC)
      call ESMF_GridDestroy(grid, _RC)
      call ESMF_GeomDestroy(geom, _RC)

      _UNUSED_DUMMY(this)
   end subroutine test_get_units

   @test(type=ESMF_TestMethod, npes=[1])
   subroutine test_field_create_vert_only(this)
      class(ESMF_TestMethod), intent(inout) :: this

      type(ESMF_Field) :: field
      type(ESMF_Geom) :: geom
      type(ESMF_Grid) :: grid
      type(ESMF_Info) :: field_info
      real(kind=ESMF_KIND_R4), pointer :: farray(:, :, :)
      integer, parameter :: num_vgrid_levels = 5
      logical :: vert_only
      integer :: num_levels, status

      field = ESMF_FieldEmptyCreate(_RC)
      grid = ESMF_GridCreateNoPeriDim(maxIndex=[3,2], _RC)
      geom = ESMF_GeomCreate(grid, _RC)
      call ESMF_FieldEmptySet(field, geom, _RC)
      call MAPL_FieldEmptyComplete( &
           field, &
           typekind=ESMF_TYPEKIND_R4, &
           gridToFieldMap=[0, 0], &
           num_levels=num_vgrid_levels+1, & ! +1 since it's an edge variable
           vert_staggerloc=VERTICAL_STAGGER_EDGE, &
           _RC)

      call MAPL_FieldGet(field, num_levels=num_levels, _RC)
      @assertEqual(num_levels, num_vgrid_levels+1)
      call assign_fptr_condensed_array(field, farray, _RC)
      @assertEqual(shape(farray), [1, num_vgrid_levels+1, 1])
      call ESMF_InfoGetFromHost(field, field_info, _RC)
      call FieldInfoGetInternal(field_info, vert_only=vert_only, _RC)
      @assertTrue(vert_only)

      call ESMF_FieldDestroy(field, _RC)
      call ESMF_GeomDestroy(geom, _RC)
      call ESMF_GridDestroy(grid, _RC)

      _UNUSED_DUMMY(this)
   end subroutine test_field_create_vert_only

   @test(type=ESMF_TestMethod, npes=[1])
   subroutine test_field_create_3d(this)
      class(ESMF_TestMethod), intent(inout) :: this

      type(ESMF_Field) :: field
      type(ESMF_Geom) :: geom
      type(ESMF_Grid) :: grid
      type(ESMF_info) :: field_info
      real(kind=ESMF_KIND_R4), pointer :: farray(:, :, :)
      integer, parameter :: num_vgrid_levels = 5
      logical :: vert_only
      integer :: num_levels, status

      field = ESMF_FieldEmptyCreate(_RC)
      grid = ESMF_GridCreateNoPeriDim(maxIndex=[3,2], _RC)
      geom = ESMF_GeomCreate(grid, _RC)
      call ESMF_FieldEmptySet(field, geom, _RC)
      call MAPL_FieldEmptyComplete( &
           field, &
           typekind=ESMF_TYPEKIND_R4, &
           num_levels=num_vgrid_levels, &
           vert_staggerloc=VERTICAL_STAGGER_CENTER, &
           _RC)

      call MAPL_FieldGet(field, num_levels=num_levels, _RC)
      @assertEqual(num_levels, num_vgrid_levels)
      call assign_fptr_condensed_array(field, farray, _RC)
      @assertEqual(shape(farray), [6, num_vgrid_levels, 1])
      call ESMF_InfoGetFromHost(field, field_info, _RC)
      call FieldInfoGetInternal(field_info, vert_only=vert_only, _RC)
      @assertFalse(vert_only)

      call ESMF_FieldDestroy(field, _RC)
      call ESMF_GeomDestroy(geom, _RC)
      call ESMF_GridDestroy(grid, _RC)

      _UNUSED_DUMMY(this)
   end subroutine test_field_create_3d

end module Test_FieldCreate
