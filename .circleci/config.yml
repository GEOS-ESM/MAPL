version: 2.1

orbs:
  ci: geos-esm/circleci-tools@0

workflows:
  build-and-test:
    jobs:
      - ci/build:
          name: build-and-test-MAPL-on-<< matrix.compiler >>
          matrix:
            parameters:
              compiler: [gfortran, ifort]
          repo: MAPL
          mepodevelop: false
          run_unit_tests: true
          ctest_options: "-R MAPL -LE PERFORMANCE --output-on-failure"
          context:
            - docker-hub-creds
      - ci/build:
          name: build-UFS-MAPL-on-<< matrix.compiler >>
          matrix:
            parameters:
              compiler: [ifort]
          repo: MAPL
          mepodevelop: false
          extra_cmake_options: "-DBUILD_WITH_FLAP=OFF -DBUILD_WITH_PFLOGGER=OFF -DBUILD_SHARED_MAPL=OFF"
          run_unit_tests: true
          ctest_options: "-R MAPL -LE PERFORMANCE --output-on-failure"
          context:
            - docker-hub-creds
      - ci/build:
          name: build-GEOSgcm-on-<< matrix.compiler >>
          matrix:
            parameters:
              compiler: [gfortran, ifort]
          repo: GEOSgcm
          checkout_fixture: true
          mepodevelop: true
          checkout_mapl_branch: true
          context:
            - docker-hub-creds
      ###################################################
      # - make-FV3-exp:                                 #
      #     name: make-FV3-exp-on-<< matrix.compiler >> #
      #     matrix:                                     #
      #       parameters:                               #
      #         compiler: [gfortran, ifort]             #
      #     context:                                    #
      #       - docker-hub-creds                        #
      #     requires:                                   #
      #       - build-GEOSgcm-on-<< matrix.compiler >>  #
      # - run-FV3:                                      #
      #     name: run-FV3-on-<< matrix.compiler >>      #
      #     matrix:                                     #
      #       parameters:                               #
      #         compiler: [gfortran, ifort]             #
      #     context:                                    #
      #       - docker-hub-creds                        #
      #     requires:                                   #
      #       - make-FV3-exp-on-<< matrix.compiler >>   #
      ###################################################
      - ci/build:
          name: build-GEOSldas-on-<< matrix.compiler >>
          matrix:
            parameters:
              compiler: [gfortran, ifort]
          repo: GEOSldas
          mepodevelop: false
          checkout_fixture: true
          fixture_branch: develop
          checkout_mapl_branch: true
          context:
            - docker-hub-creds
      - ci/build:
          name: build-GEOSadas-on-<< matrix.compiler >>
          matrix:
            parameters:
              compiler: [ifort]
          resource_class: xlarge
          repo: GEOSadas
          checkout_fixture: true
          fixture_branch: develop
          checkout_mapl_branch: true
          mepodevelop: true
          develop_repos: "cmake GEOSana_GridComp"
          rebuild_procs: 8
          context:
            - docker-hub-creds

jobs:
  ######################################################
  # ### For future reference ###                       #
  # # We need to persist the install for the next step #
  # # but only if we are running FV3 tests             #
  # - persist_to_workspace:                            #
  #     root: workspace                                #
  #     paths:                                         #
  #       - install-GEOSgcm                            #
  ######################################################

  make-FV3-exp:
    parameters:
      compiler:
        type: string
    executor: ci/<< parameters.compiler >>
    working_directory: /root/project
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: "Run fv3_setup"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/workspace/install-GEOSgcm/bin

            INPUT_FOR_SETUP=$(cat \<<END_HEREDOC
            test-fv3-c12
            test-fv3-c12
            12
            72
            NO
            NO
            ${CIRCLE_WORKING_DIRECTORY}/workspace/test-fv3-c12
            NULL
            END_HEREDOC
            )
            echo "$INPUT_FOR_SETUP" > /tmp/input.txt

            cat /tmp/input.txt | ./fv3_setup
      - run:
          name: "Change FV_NX, FV_NY, and RUN_CMD"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/workspace/test-fv3-c12
            sed -i.bak -e '/set FV_NX/ s/\([0-9]\+\)/1/' -e '/set FV_NY/ s/\([0-9]\+\)/6/' -e '/set RUN_CMD/ c\set RUN_CMD = "mpirun -np "' fv3.j
      - run:
          name: "Cat fv3.j"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/workspace/test-fv3-c12
            cat fv3.j

      # We need to persist the install for the next step
      - persist_to_workspace:
          root: workspace
          paths:
            - test-fv3-c12

  run-FV3:
    parameters:
      compiler:
        type: string
    executor: ci/<< parameters.compiler >>
    working_directory: /root/project
    steps:
      - attach_workspace:
          at: workspace
      - run:
          name: "Run fv3.j"
          command: |
            mkdir -p /logfiles
            cd ${CIRCLE_WORKING_DIRECTORY}/workspace/test-fv3-c12
            ./fv3.j |& tee /logfiles/fv3_run.log
      - run:
          name: "Check for EGRESS"
          command: |
            cd ${CIRCLE_WORKING_DIRECTORY}/workspace/test-fv3-c12

            # The scratch directory for fv3 standalone isn't consistent
            SCRDIR=$(find . -type d -name 'scratch*')

            if [[ -f $SCRDIR/EGRESS ]]
            then
               echo "EGRESS found!"
            else
               echo "EGRESS not found!"
               exit 1
            fi
      - ci/compress_artifacts
      - store_artifacts:
          path: /logfiles

