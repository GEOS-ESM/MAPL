version: 2.1

# Anchor to prevent forgetting to update a version
baselibs_version: &baselibs_version v7.0.0

orbs:
  ci: geos-esm/circleci-tools@1

workflows:
  build-and-test:
    jobs:

      # Builds MAPL in a "default" way - Intel
      - ci/build:
          name: build-and-test-MAPL-on-<< matrix.compiler >>
          context:
            - docker-hub-creds
          matrix:
            parameters:
              compiler: [ifort]
          baselibs_version: *baselibs_version
          repo: MAPL
          mepodevelop: false
          run_unit_tests: true
          ctest_options: "-LE PERFORMANCE --output-on-failure"

      # Builds MAPL in a "default" way - GNU
      #
      # NOTE: Currently Open MPI fails on the bundleio with:
      #
      #   The OSC pt2pt component does not support MPI_THREAD_MULTIPLE in this release.
      #   Workarounds are to run on a single node, or to use a system with an RDMA
      #   capable network such as Infiniband.
      #
      # For now, we run GNU/Open MPI without the bundleio tests. Some indications that
      # Open MPI 5 will not have this limitation

      - ci/build:
          name: build-and-test-MAPL-on-<< matrix.compiler >>
          context:
            - docker-hub-creds
          matrix:
            parameters:
              compiler: [gfortran]
          baselibs_version: *baselibs_version
          repo: MAPL
          mepodevelop: false
          run_unit_tests: true
          ctest_options: "-E bundleio -LE PERFORMANCE --output-on-failure"

      # Builds MAPL like UFS does (no FLAP and pFlogger, static)
      - ci/build:
          name: build-UFS-MAPL-on-<< matrix.compiler >>
          context:
            - docker-hub-creds
          matrix:
            parameters:
              compiler: [ifort]
          baselibs_version: *baselibs_version
          repo: MAPL
          mepodevelop: false
          extra_cmake_options: "-DBUILD_WITH_FLAP=OFF -DBUILD_WITH_PFLOGGER=OFF -DBUILD_SHARED_MAPL=OFF"
          run_unit_tests: true
          ctest_options: "-LE PERFORMANCE --output-on-failure"

      # Build GEOSgcm
      - ci/build:
          name: build-GEOSgcm-on-<< matrix.compiler >>
          context:
            - docker-hub-creds
          matrix:
            parameters:
              compiler: [gfortran, ifort]
          baselibs_version: *baselibs_version
          repo: GEOSgcm
          checkout_fixture: true
          mepodevelop: true
          checkout_mapl3_release_branch: true
          checkout_mapl_branch: true
          persist_workspace: true # Needs to be true to run fv3/gcm experiment, costs extra, retained for one day

      # Build GEOSldas
      - ci/build:
          name: build-GEOSldas-on-<< matrix.compiler >>
          context:
            - docker-hub-creds
          matrix:
            parameters:
              compiler: [gfortran, ifort]
          baselibs_version: *baselibs_version
          repo: GEOSldas
          mepodevelop: false
          checkout_fixture: true
          fixture_branch: release/MAPL-v3
          checkout_mapl3_release_branch: true
          checkout_mapl_branch: true

      # Build GEOSadas (ifort only, needs a couple develop branches)
      - ci/build:
          name: build-GEOSadas-on-<< matrix.compiler >>
          context:
            - docker-hub-creds
          matrix:
            parameters:
              compiler: [ifort]
          resource_class: xlarge
          baselibs_version: *baselibs_version
          repo: GEOSadas
          checkout_fixture: true
          fixture_branch: release/MAPL-v3
          checkout_mapl3_release_branch: true
          checkout_mapl_branch: true
          mepodevelop: false
          rebuild_procs: 8

      # Run GCM (1 hour, no ExtData)
      - ci/run_gcm:
          name: run-GCM-on-<< matrix.compiler >>
          context:
            - docker-hub-creds
          matrix:
            parameters:
              compiler: [gfortran, ifort]
          requires:
            - build-GEOSgcm-on-<< matrix.compiler >>
          repo: GEOSgcm
          baselibs_version: *baselibs_version
