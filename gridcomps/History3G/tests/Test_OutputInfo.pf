#include "MAPL_TestErr.h"
module Test_OutputInfo
   use mapl3g_output_info
   use pfunit
   use esmf

   implicit none

#include "history3g_test_utility_variables.h"

contains

#include "history3g_test_utility_procedures.h"

   subroutine test_get_num_levels_info()
      type(ESMF_Info) :: info
      integer :: status
      integer, parameter :: EXPECTED_NUM_LEVELS = 3
      integer :: num_levels
      
      info = ESMF_InfoCreate(_RC)
      call make_esmf_info(info, num_levels=EXPECTED_NUM_LEVELS, _RC)
      num_levels = get_num_levels_info(info, _RC)
      @assertEqual(EXPECTED_NUM_LEVELS, num_levels, 'num_levels does not match.')
      call ESMF_InfoDestroy(info)

   end subroutine test_get_num_levels

   subroutine test_get_vertical_dim_spec_name_info()
      type(ESMF_Info) :: info
      integer :: status
      character(len=*), parameter :: EXPECTED_NAME = 'VERTICAL_DIM_CENTER'
      character(len=:), allocatable :: name

      info = ESMF_InfoCreate(_RC)
      call make_esmf_info(info, vloc=EXPECTED_NAME, _RC)
      name = get_vertical_dim_spec_name_info(info, _RC)
      @assertEqual(EXPECTED_NAME, name, 'vertical_dim_spec_name does not match.')
      call ESMF_InfoDestroy(info)

   end subroutine test_get_vertical_dim_spec_name_info

   subroutine test_get_ungridded_dims_info_info()
      type(ESMF_Info) :: info
      integer :: status
      type(UngriddedDimsInfo), parameter :: 

      info = ESMF_InfoCreate(_RC)
      call ESMF_InfoDestroy(info)

   end subroutine test_get_ungridded_dims_info_info

end module Test_OutputInfo
